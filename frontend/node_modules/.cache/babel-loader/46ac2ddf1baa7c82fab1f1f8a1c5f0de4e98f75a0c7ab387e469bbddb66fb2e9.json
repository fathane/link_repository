{"ast":null,"code":"var _jsxFileName = \"/home/fathane/link_repository/frontend/src/components/ValidateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidateOrder = ({\n  userId,\n  cart,\n  totalPrice,\n  onEmptyCart\n}) => {\n  _s();\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDeliveryInfo({\n      ...deliveryInfo,\n      [name]: value\n    });\n  };\n  const handleOrderSubmit = async () => {\n    setIsSubmitting(true);\n    setMessage('Envoi de la commande...');\n    try {\n      const response = await fetch('http://localhost:3000/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          cartItems: cart,\n          deliveryInfo,\n          totalPrice\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('Commande validée');\n        console.log('Commande validée:', data); // Utilisez les données si nécessaire\n        setMessage('Commande validée avec succès!');\n        alert('Commande validéea avec succès!');\n        onEmptyCart();\n      } else {\n        setMessage('Erreur lors de la validation de la commande');\n        alert('erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      alert;\n      setMessage('Impossible de se connecter au serveur');\n    }\n    setIsSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valider la commande\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"Nom\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"surname\",\n      placeholder: \"Pr\\xE9nom\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"city\",\n      placeholder: \"Ville\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"neighborhood\",\n      placeholder: \"Quartier\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"phone\",\n      placeholder: \"T\\xE9l\\xE9phone\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOrderSubmit,\n      disabled: isSubmitting,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n_s(ValidateOrder, \"pHn0LhFDLiiwfgim78r+9Yv12P0=\");\n_c = ValidateOrder;\nexport default ValidateOrder;\nvar _c;\n$RefreshReg$(_c, \"ValidateOrder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ValidateOrder","userId","cart","totalPrice","onEmptyCart","_s","deliveryInfo","setDeliveryInfo","name","surname","city","neighborhood","phone","message","setMessage","isSubmitting","setIsSubmitting","handleInputChange","e","value","target","handleOrderSubmit","response","fetch","method","headers","body","JSON","stringify","cartItems","ok","data","json","alert","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/fathane/link_repository/frontend/src/components/ValidateOrder.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ValidateOrder = ({ userId, cart, totalPrice, onEmptyCart }) => {\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: '',\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setDeliveryInfo({ ...deliveryInfo, [name]: value });\n  };\n\n  const handleOrderSubmit = async () => {\n    setIsSubmitting(true);\n    setMessage('Envoi de la commande...');\n  \n    try {\n      const response = await fetch('http://localhost:3000/api/orders', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ userId, cartItems: cart, deliveryInfo, totalPrice }),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        alert('Commande validée');\n        console.log('Commande validée:', data); // Utilisez les données si nécessaire\n        setMessage('Commande validée avec succès!');\n        alert('Commande validéea avec succès!');\n        onEmptyCart();\n      } else {\n        setMessage('Erreur lors de la validation de la commande');\n        alert('erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      alert\n      setMessage('Impossible de se connecter au serveur');\n    }\n  \n    setIsSubmitting(false);\n  };\n  \n  return (\n    <div>\n      <h2>Valider la commande</h2>\n      <input name=\"name\" placeholder=\"Nom\" onChange={handleInputChange} />\n      <input name=\"surname\" placeholder=\"Prénom\" onChange={handleInputChange} />\n      <input name=\"city\" placeholder=\"Ville\" onChange={handleInputChange} />\n      <input name=\"neighborhood\" placeholder=\"Quartier\" onChange={handleInputChange} />\n      <input name=\"phone\" placeholder=\"Téléphone\" onChange={handleInputChange} />\n      <button onClick={handleOrderSubmit} disabled={isSubmitting}>Valider</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ValidateOrder;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,IAAI;EAAEC,UAAU;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACnE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC;IAC/CW,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMoB,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAM;MAAEV,IAAI;MAAEW;IAAM,CAAC,GAAGD,CAAC,CAACE,MAAM;IAChCb,eAAe,CAAC;MAAE,GAAGD,YAAY;MAAE,CAACE,IAAI,GAAGW;IAAM,CAAC,CAAC;EACrD,CAAC;EAED,MAAME,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpCL,eAAe,CAAC,IAAI,CAAC;IACrBF,UAAU,CAAC,yBAAyB,CAAC;IAErC,IAAI;MACF,MAAMQ,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC/DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAE3B,MAAM;UAAE4B,SAAS,EAAE3B,IAAI;UAAEI,YAAY;UAAEH;QAAW,CAAC;MAC5E,CAAC,CAAC;MAEF,IAAImB,QAAQ,CAACQ,EAAE,EAAE;QACf,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;QAClCC,KAAK,CAAC,kBAAkB,CAAC;QACzBC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEJ,IAAI,CAAC,CAAC,CAAC;QACxCjB,UAAU,CAAC,+BAA+B,CAAC;QAC3CmB,KAAK,CAAC,gCAAgC,CAAC;QACvC7B,WAAW,CAAC,CAAC;MACf,CAAC,MAAM;QACLU,UAAU,CAAC,6CAA6C,CAAC;QACzDmB,KAAK,CAAC,6CAA6C,CAAC;MACtD;IACF,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,kDAAkD,EAAEA,KAAK,CAAC;MACxEH,KAAK;MACLnB,UAAU,CAAC,uCAAuC,CAAC;IACrD;IAEAE,eAAe,CAAC,KAAK,CAAC;EACxB,CAAC;EAED,oBACEjB,OAAA;IAAAsC,QAAA,gBACEtC,OAAA;MAAAsC,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5B1C,OAAA;MAAOS,IAAI,EAAC,MAAM;MAACkC,WAAW,EAAC,KAAK;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACpE1C,OAAA;MAAOS,IAAI,EAAC,SAAS;MAACkC,WAAW,EAAC,WAAQ;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC1E1C,OAAA;MAAOS,IAAI,EAAC,MAAM;MAACkC,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtE1C,OAAA;MAAOS,IAAI,EAAC,cAAc;MAACkC,WAAW,EAAC,UAAU;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACjF1C,OAAA;MAAOS,IAAI,EAAC,OAAO;MAACkC,WAAW,EAAC,iBAAW;MAACC,QAAQ,EAAE1B;IAAkB;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC3E1C,OAAA;MAAQ6C,OAAO,EAAEvB,iBAAkB;MAACwB,QAAQ,EAAE9B,YAAa;MAAAsB,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC3E5B,OAAO,iBAAId,OAAA;MAAAsC,QAAA,EAAIxB;IAAO;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV,CAAC;AAACpC,EAAA,CA3DIL,aAAa;AAAA8C,EAAA,GAAb9C,aAAa;AA6DnB,eAAeA,aAAa;AAAC,IAAA8C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}