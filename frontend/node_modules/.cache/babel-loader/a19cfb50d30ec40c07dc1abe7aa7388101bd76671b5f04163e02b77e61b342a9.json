{"ast":null,"code":"var _jsxFileName = \"/home/fathane/link_repository/frontend/src/components/AdminLoginPage.js\",\n  _s = $RefreshSig$();\n// src/components/AdminLoginPage.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLoginPage = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleLogin = e => {\n    e.preventDefault();\n    // Remplacez cette logique par votre logique d'authentification\n    if (username === 'admin' && password === 'password') {\n      localStorage.setItem('token', 'votre_token'); // Stockez le token\n      navigate('/admin'); // Redirigez vers la page admin\n    } else {\n      alert('Identifiants incorrects');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: username,\n      onChange: e => setUsername(e.target.value),\n      placeholder: \"Nom d'utilisateur\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      placeholder: \"Mot de passe\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n_s(AdminLoginPage, \"IIPwWddbiEHHD7aoL5eQeOR7fTk=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLoginPage;\nexport default AdminLoginPage;\nvar _c;\n$RefreshReg$(_c, \"AdminLoginPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","AdminLoginPage","_s","username","setUsername","password","setPassword","navigate","handleLogin","e","preventDefault","localStorage","setItem","alert","onSubmit","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/fathane/link_repository/frontend/src/components/AdminLoginPage.js"],"sourcesContent":["// src/components/AdminLoginPage.js\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst AdminLoginPage = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const navigate = useNavigate();\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        // Remplacez cette logique par votre logique d'authentification\n        if (username === 'admin' && password === 'password') {\n            localStorage.setItem('token', 'votre_token'); // Stockez le token\n            navigate('/admin'); // Redirigez vers la page admin\n        } else {\n            alert('Identifiants incorrects');\n        }\n    };\n\n    return (\n        <form onSubmit={handleLogin}>\n            <input\n                type=\"text\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n                placeholder=\"Nom d'utilisateur\"\n            />\n            <input\n                type=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                placeholder=\"Mot de passe\"\n            />\n            <button type=\"submit\">Se connecter</button>\n        </form>\n    );\n};\n\nexport default AdminLoginPage;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAE9B,MAAMU,WAAW,GAAIC,CAAC,IAAK;IACvBA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB;IACA,IAAIP,QAAQ,KAAK,OAAO,IAAIE,QAAQ,KAAK,UAAU,EAAE;MACjDM,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,aAAa,CAAC,CAAC,CAAC;MAC9CL,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxB,CAAC,MAAM;MACHM,KAAK,CAAC,yBAAyB,CAAC;IACpC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAMc,QAAQ,EAAEN,WAAY;IAAAO,QAAA,gBACxBf,OAAA;MACIgB,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEd,QAAS;MAChBe,QAAQ,EAAGT,CAAC,IAAKL,WAAW,CAACK,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACFxB,OAAA;MACIgB,IAAI,EAAC,UAAU;MACfC,KAAK,EAAEZ,QAAS;MAChBa,QAAQ,EAAGT,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACU,MAAM,CAACF,KAAK,CAAE;MAC7CG,WAAW,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CAAC,eACFxB,OAAA;MAAQgB,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAY;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzC,CAAC;AAEf,CAAC;AAACtB,EAAA,CAjCID,cAAc;EAAA,QAGCH,WAAW;AAAA;AAAA2B,EAAA,GAH1BxB,cAAc;AAmCpB,eAAeA,cAAc;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}