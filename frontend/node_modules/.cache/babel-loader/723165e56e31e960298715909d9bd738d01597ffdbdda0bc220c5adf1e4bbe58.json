{"ast":null,"code":"var _jsxFileName = \"/home/fathane/link_repository/frontend/src/components/ValidateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidateOrder = ({\n  items,\n  totalPrice,\n  onEmptyCart\n}) => {\n  _s();\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDeliveryInfo({\n      ...deliveryInfo,\n      [name]: value\n    });\n  };\n  const handleOrderSubmit = async () => {\n    setIsSubmitting(true);\n    setMessage('Envoi de la commande...');\n    try {\n      // Envoyer les articles de commande au backend\n      const orderResponse = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items,\n          totalPrice\n        })\n      });\n      if (orderResponse.ok) {\n        const orderData = await orderResponse.json();\n        console.log('Réponse du backend pour les commandes:', orderData);\n\n        // Envoyer les informations de livraison au backend\n        const deliveryResponse = await fetch('http://localhost:5000/delivery', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(deliveryInfo)\n        });\n        if (deliveryResponse.ok) {\n          setMessage('Commande et livraison validées avec succès!');\n          onEmptyCart(); // Vider le panier après validation\n        } else {\n          setMessage('Erreur lors de la validation de la livraison');\n        }\n      } else {\n        setMessage('Erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      setMessage('Impossible de se connecter au serveur');\n    }\n    setIsSubmitting(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valider la commande\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"name\",\n      placeholder: \"Nom\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"surname\",\n      placeholder: \"Pr\\xE9nom\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"city\",\n      placeholder: \"Ville\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"neighborhood\",\n      placeholder: \"Quartier\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      name: \"phone\",\n      placeholder: \"T\\xE9l\\xE9phone\",\n      onChange: handleInputChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOrderSubmit,\n      disabled: isSubmitting,\n      children: \"Valider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n_s(ValidateOrder, \"pHn0LhFDLiiwfgim78r+9Yv12P0=\");\n_c = ValidateOrder;\nexport default ValidateOrder;\nvar _c;\n$RefreshReg$(_c, \"ValidateOrder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ValidateOrder","items","totalPrice","onEmptyCart","_s","deliveryInfo","setDeliveryInfo","name","surname","city","neighborhood","phone","message","setMessage","isSubmitting","setIsSubmitting","handleInputChange","e","value","target","handleOrderSubmit","orderResponse","fetch","method","headers","body","JSON","stringify","ok","orderData","json","console","log","deliveryResponse","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/fathane/link_repository/frontend/src/components/ValidateOrder.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ValidateOrder = ({ items, totalPrice, onEmptyCart }) => {\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: '',\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setDeliveryInfo({ ...deliveryInfo, [name]: value });\n  };\n\n  const handleOrderSubmit = async () => {\n    setIsSubmitting(true);\n    setMessage('Envoi de la commande...');\n  \n    try {\n      // Envoyer les articles de commande au backend\n      const orderResponse = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ items, totalPrice }),\n      });\n  \n      if (orderResponse.ok) {\n        const orderData = await orderResponse.json();\n        console.log('Réponse du backend pour les commandes:', orderData);\n  \n        // Envoyer les informations de livraison au backend\n        const deliveryResponse = await fetch('http://localhost:5000/delivery', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify(deliveryInfo),\n        });\n  \n        if (deliveryResponse.ok) {\n          setMessage('Commande et livraison validées avec succès!');\n          onEmptyCart(); // Vider le panier après validation\n        } else {\n          setMessage('Erreur lors de la validation de la livraison');\n        }\n      } else {\n        setMessage('Erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      setMessage('Impossible de se connecter au serveur');\n    }\n  \n    setIsSubmitting(false);\n  };\n\n  return (\n    <div>\n      <h2>Valider la commande</h2>\n      <input name=\"name\" placeholder=\"Nom\" onChange={handleInputChange} />\n      <input name=\"surname\" placeholder=\"Prénom\" onChange={handleInputChange} />\n      <input name=\"city\" placeholder=\"Ville\" onChange={handleInputChange} />\n      <input name=\"neighborhood\" placeholder=\"Quartier\" onChange={handleInputChange} />\n      <input name=\"phone\" placeholder=\"Téléphone\" onChange={handleInputChange} />\n      <button onClick={handleOrderSubmit} disabled={isSubmitting}>Valider</button>\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ValidateOrder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}