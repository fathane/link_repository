{"ast":null,"code":"var _jsxFileName = \"/home/fathane/links/mon-projet-menu/frontend/src/components/DeliveryPage.js\",\n  _s = $RefreshSig$();\n// src/components/DeliveryPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DeliveryPage = () => {\n  _s();\n  // State pour les informations de livraison et les messages d'erreur\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Fonction de gestion de la confirmation de commande\n  const handleConfirm = async () => {\n    if (Object.values(deliveryInfo).every(value => value)) {\n      // Logic pour envoyer les informations de la commande au backend\n      try {\n        const response = await fetch('http://localhost:5000/api/orders', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            items: [],\n            // Liste des produits du panier\n            deliveryInfo: deliveryInfo,\n            totalPrice: 0 // Le prix total de la commande\n          })\n        });\n        if (response.ok) {\n          alert('Commande envoyée avec succès!');\n          navigate('/'); // Redirige vers la page d'accueil\n        } else {\n          setErrorMessage('Erreur lors de l\\'envoi des informations de commande');\n        }\n      } catch (error) {\n        console.error('Erreur avec le serveur:', error);\n        setErrorMessage('Erreur de connexion avec le serveur');\n      }\n    } else {\n      setErrorMessage('Veuillez remplir toutes les informations de livraison.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Page de Livraison\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nom\",\n        value: deliveryInfo.name,\n        onChange: e => setDeliveryInfo({\n          ...deliveryInfo,\n          name: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Pr\\xE9nom\",\n        value: deliveryInfo.surname,\n        onChange: e => setDeliveryInfo({\n          ...deliveryInfo,\n          surname: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Ville\",\n        value: deliveryInfo.city,\n        onChange: e => setDeliveryInfo({\n          ...deliveryInfo,\n          city: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Quartier\",\n        value: deliveryInfo.neighborhood,\n        onChange: e => setDeliveryInfo({\n          ...deliveryInfo,\n          neighborhood: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"tel\",\n        placeholder: \"T\\xE9l\\xE9phone\",\n        value: deliveryInfo.phone,\n        onChange: e => setDeliveryInfo({\n          ...deliveryInfo,\n          phone: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleConfirm,\n      children: \"Confirmer la commande\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(DeliveryPage, \"BVnQCNpO/vwSWM1lTg6d6kXn02M=\", false, function () {\n  return [useNavigate];\n});\n_c = DeliveryPage;\nexport default DeliveryPage;\nvar _c;\n$RefreshReg$(_c, \"DeliveryPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","DeliveryPage","_s","deliveryInfo","setDeliveryInfo","name","surname","city","neighborhood","phone","errorMessage","setErrorMessage","navigate","handleConfirm","Object","values","every","value","response","fetch","method","headers","body","JSON","stringify","items","totalPrice","ok","alert","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","onChange","e","target","onClick","style","color","_c","$RefreshReg$"],"sources":["/home/fathane/links/mon-projet-menu/frontend/src/components/DeliveryPage.js"],"sourcesContent":["// src/components/DeliveryPage.js\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst DeliveryPage = () => {\n  // State pour les informations de livraison et les messages d'erreur\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: ''\n  });\n  const [errorMessage, setErrorMessage] = useState('');\n  const navigate = useNavigate();\n\n  // Fonction de gestion de la confirmation de commande\n  const handleConfirm = async () => {\n    if (Object.values(deliveryInfo).every(value => value)) {\n      // Logic pour envoyer les informations de la commande au backend\n      try {\n        const response = await fetch('http://localhost:5000/api/orders', {\n          method: 'POST',\n          headers: { 'Content-Type': 'application/json' },\n          body: JSON.stringify({ \n            items: [], // Liste des produits du panier\n            deliveryInfo: deliveryInfo,\n            totalPrice: 0 // Le prix total de la commande\n          }),\n        });\n\n        if (response.ok) {\n          alert('Commande envoyée avec succès!');\n          navigate('/'); // Redirige vers la page d'accueil\n        } else {\n          setErrorMessage('Erreur lors de l\\'envoi des informations de commande');\n        }\n      } catch (error) {\n        console.error('Erreur avec le serveur:', error);\n        setErrorMessage('Erreur de connexion avec le serveur');\n      }\n    } else {\n      setErrorMessage('Veuillez remplir toutes les informations de livraison.');\n    }\n  };\n\n  return (\n    <div>\n      <h1>Page de Livraison</h1>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Nom\"\n          value={deliveryInfo.name}\n          onChange={e => setDeliveryInfo({ ...deliveryInfo, name: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Prénom\"\n          value={deliveryInfo.surname}\n          onChange={e => setDeliveryInfo({ ...deliveryInfo, surname: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Ville\"\n          value={deliveryInfo.city}\n          onChange={e => setDeliveryInfo({ ...deliveryInfo, city: e.target.value })}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Quartier\"\n          value={deliveryInfo.neighborhood}\n          onChange={e => setDeliveryInfo({ ...deliveryInfo, neighborhood: e.target.value })}\n        />\n        <input\n          type=\"tel\"\n          placeholder=\"Téléphone\"\n          value={deliveryInfo.phone}\n          onChange={e => setDeliveryInfo({ ...deliveryInfo, phone: e.target.value })}\n        />\n      </form>\n\n      <button onClick={handleConfirm}>Confirmer la commande</button>\n\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\n    </div>\n  );\n};\n\nexport default DeliveryPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}