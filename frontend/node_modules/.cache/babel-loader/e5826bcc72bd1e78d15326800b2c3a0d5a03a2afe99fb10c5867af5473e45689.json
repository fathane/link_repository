{"ast":null,"code":"// src/components/DeliveryPage.js\n\n// Si 'useState' n'est pas utilisé, supprimez cette ligne :\nimport React from 'react'; // pas besoin de 'useState' si vous ne l'utilisez pas\n\n// Si 'data' n'est pas nécessaire, supprimez-la ou utilisez-la.\nconst handleConfirm = async () => {\n  if (Object.values(deliveryInfo).every(value => value)) {\n    // Si toutes les informations sont présentes, envoyer la commande au backend\n    try {\n      const response = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items: [],\n          // Vous pouvez ajouter ici la liste des produits dans le panier\n          deliveryInfo: deliveryInfo,\n          totalPrice: 0 // Ajoutez le prix total de la commande ici\n        })\n      });\n\n      // Suppression de la variable 'data' si elle n'est pas utilisée\n      if (response.ok) {\n        alert('Commande confirmée et envoyée au serveur !');\n        navigate('/'); // Redirige vers la page d'accueil après la confirmation\n      } else {\n        alert('Erreur lors de l\\'envoi des informations de commande.');\n        setErrorMessage('Erreur lors de l\\'envoi des informations de commande.');\n      }\n    } catch (error) {\n      alert('Erreur de connexion avec le serveur:');\n      alert('Impossible de se connecter au serveur');\n      console.error('Erreur de connexion avec le serveur:', error);\n      setErrorMessage('Impossible de se connecter au serveur');\n    }\n  } else {\n    setErrorMessage('Veuillez entrer toutes les informations de livraison.');\n  }\n};","map":{"version":3,"names":["React","handleConfirm","Object","values","deliveryInfo","every","value","response","fetch","method","headers","body","JSON","stringify","items","totalPrice","ok","alert","navigate","setErrorMessage","error","console"],"sources":["/home/fathane/links/mon-projet-menu/frontend/src/components/DeliveryPage.js"],"sourcesContent":["// src/components/DeliveryPage.js\n\n// Si 'useState' n'est pas utilisé, supprimez cette ligne :\nimport React from 'react'; // pas besoin de 'useState' si vous ne l'utilisez pas\n\n// Si 'data' n'est pas nécessaire, supprimez-la ou utilisez-la.\nconst handleConfirm = async () => {\n    if (Object.values(deliveryInfo).every(value => value)) {\n        // Si toutes les informations sont présentes, envoyer la commande au backend\n        try {\n            const response = await fetch('http://localhost:5000/api/orders', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({ \n                    items: [], // Vous pouvez ajouter ici la liste des produits dans le panier\n                    deliveryInfo: deliveryInfo,\n                    totalPrice: 0 // Ajoutez le prix total de la commande ici\n                }),\n            });\n\n            // Suppression de la variable 'data' si elle n'est pas utilisée\n            if (response.ok) {\n                alert('Commande confirmée et envoyée au serveur !');\n                navigate('/'); // Redirige vers la page d'accueil après la confirmation\n            } else {\n                alert('Erreur lors de l\\'envoi des informations de commande.');\n                setErrorMessage('Erreur lors de l\\'envoi des informations de commande.');\n            }\n        } catch (error) {\n            alert('Erreur de connexion avec le serveur:');\n            alert('Impossible de se connecter au serveur');\n            console.error('Erreur de connexion avec le serveur:', error);\n            setErrorMessage('Impossible de se connecter au serveur');\n        }\n    } else {\n        setErrorMessage('Veuillez entrer toutes les informations de livraison.');\n    }\n};\n"],"mappings":"AAAA;;AAEA;AACA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AACA,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAIC,MAAM,CAACC,MAAM,CAACC,YAAY,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIA,KAAK,CAAC,EAAE;IACnD;IACA,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAE,EAAE;UAAE;UACXV,YAAY,EAAEA,YAAY;UAC1BW,UAAU,EAAE,CAAC,CAAC;QAClB,CAAC;MACL,CAAC,CAAC;;MAEF;MACA,IAAIR,QAAQ,CAACS,EAAE,EAAE;QACbC,KAAK,CAAC,4CAA4C,CAAC;QACnDC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACHD,KAAK,CAAC,uDAAuD,CAAC;QAC9DE,eAAe,CAAC,uDAAuD,CAAC;MAC5E;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZH,KAAK,CAAC,sCAAsC,CAAC;MAC7CA,KAAK,CAAC,uCAAuC,CAAC;MAC9CI,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5DD,eAAe,CAAC,uCAAuC,CAAC;IAC5D;EACJ,CAAC,MAAM;IACHA,eAAe,CAAC,uDAAuD,CAAC;EAC5E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}