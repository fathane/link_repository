{"ast":null,"code":"const handleConfirm = async () => {\n  if (Object.values(deliveryInfo).every(value => value)) {\n    try {\n      const response = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items: cart,\n          // Envoie les articles du panier\n          deliveryInfo: deliveryInfo,\n          totalPrice: totalPrice // Envoie le prix total\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        alert('Commande confirmée et envoyée au serveur !');\n        navigate('/'); // Redirige vers la page d'accueil\n      } else {\n        alert('Erreur lors de l\\'envoi des informations de commande.');\n      }\n    } catch (error) {\n      alert('Impossible de se connecter au serveur');\n      console.error('Erreur de connexion avec le serveur:', error);\n    }\n  } else {\n    setErrorMessage('Veuillez entrer toutes les informations de livraison.');\n  }\n};","map":{"version":3,"names":["handleConfirm","Object","values","deliveryInfo","every","value","response","fetch","method","headers","body","JSON","stringify","items","cart","totalPrice","ok","data","json","alert","navigate","error","console","setErrorMessage"],"sources":["/home/fathane/mon-projet-menu/frontend/src/components/DeliveryPage.js"],"sourcesContent":["const handleConfirm = async () => {\n    if (Object.values(deliveryInfo).every(value => value)) {\n        try {\n            const response = await fetch('http://localhost:5000/api/orders', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                body: JSON.stringify({\n                    items: cart, // Envoie les articles du panier\n                    deliveryInfo: deliveryInfo,\n                    totalPrice: totalPrice, // Envoie le prix total\n                }),\n            });\n\n            if (response.ok) {\n                const data = await response.json();\n                alert('Commande confirmée et envoyée au serveur !');\n                navigate('/'); // Redirige vers la page d'accueil\n            } else {\n                alert('Erreur lors de l\\'envoi des informations de commande.');\n            }\n        } catch (error) {\n            alert('Impossible de se connecter au serveur');\n            console.error('Erreur de connexion avec le serveur:', error);\n        }\n    } else {\n        setErrorMessage('Veuillez entrer toutes les informations de livraison.');\n    }\n};\n"],"mappings":"AAAA,MAAMA,aAAa,GAAG,MAAAA,CAAA,KAAY;EAC9B,IAAIC,MAAM,CAACC,MAAM,CAACC,YAAY,CAAC,CAACC,KAAK,CAACC,KAAK,IAAIA,KAAK,CAAC,EAAE;IACnD,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kCAAkC,EAAE;QAC7DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UAAE,cAAc,EAAE;QAAmB,CAAC;QAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBC,KAAK,EAAEC,IAAI;UAAE;UACbX,YAAY,EAAEA,YAAY;UAC1BY,UAAU,EAAEA,UAAU,CAAE;QAC5B,CAAC;MACL,CAAC,CAAC;MAEF,IAAIT,QAAQ,CAACU,EAAE,EAAE;QACb,MAAMC,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;QAClCC,KAAK,CAAC,4CAA4C,CAAC;QACnDC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;MACnB,CAAC,MAAM;QACHD,KAAK,CAAC,uDAAuD,CAAC;MAClE;IACJ,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZF,KAAK,CAAC,uCAAuC,CAAC;MAC9CG,OAAO,CAACD,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;IAChE;EACJ,CAAC,MAAM;IACHE,eAAe,CAAC,uDAAuD,CAAC;EAC5E;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}