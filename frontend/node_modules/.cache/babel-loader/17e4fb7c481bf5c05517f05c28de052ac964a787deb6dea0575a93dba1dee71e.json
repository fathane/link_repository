{"ast":null,"code":"var _jsxFileName = \"/home/fathane/link_repository/frontend/src/components/ProtectedRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProtectedRoute = ({\n  children\n}) => {\n  _s();\n  const [isLoading, setIsLoading] = useState(true);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    // Ici, vous pouvez ajouter une logique pour vérifier la validité du token (par exemple, expiration)\n    setIsAuthenticated(!!token);\n    setIsLoading(false);\n  }, []);\n  if (isLoading) {\n    // Vous pouvez retourner un spinner de chargement ou un message ici\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Chargement...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n  return isAuthenticated ? children : /*#__PURE__*/_jsxDEV(Navigate, {\n    to: \"/link\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 41\n  }, this);\n};\n_s(ProtectedRoute, \"WRXjUPutFw5O39gJHBZtWrpgCxI=\");\n_c = ProtectedRoute;\nexport default ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","jsxDEV","_jsxDEV","ProtectedRoute","children","_s","isLoading","setIsLoading","isAuthenticated","setIsAuthenticated","token","localStorage","getItem","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["/home/fathane/link_repository/frontend/src/components/ProtectedRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\n\nconst ProtectedRoute = ({ children }) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        // Ici, vous pouvez ajouter une logique pour vérifier la validité du token (par exemple, expiration)\n        setIsAuthenticated(!!token);\n        setIsLoading(false);\n    }, []);\n\n    if (isLoading) {\n        // Vous pouvez retourner un spinner de chargement ou un message ici\n        return <div>Chargement...</div>;\n    }\n\n    return isAuthenticated ? children : <Navigate to=\"/link\" />;\n};\n\nexport default ProtectedRoute;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,cAAc,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACS,eAAe,EAAEC,kBAAkB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7DD,SAAS,CAAC,MAAM;IACZ,MAAMY,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IAC3C;IACAH,kBAAkB,CAAC,CAAC,CAACC,KAAK,CAAC;IAC3BH,YAAY,CAAC,KAAK,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,IAAID,SAAS,EAAE;IACX;IACA,oBAAOJ,OAAA;MAAAE,QAAA,EAAK;IAAa;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACnC;EAEA,OAAOR,eAAe,GAAGJ,QAAQ,gBAAGF,OAAA,CAACF,QAAQ;IAACiB,EAAE,EAAC;EAAO;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAC/D,CAAC;AAACX,EAAA,CAjBIF,cAAc;AAAAe,EAAA,GAAdf,cAAc;AAmBpB,eAAeA,cAAc;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}