{"ast":null,"code":"var _jsxFileName = \"/home/fathane/mon-projet-menu/frontend/src/components/ValidateOrder.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ValidateOrder = ({\n  items,\n  totalPrice,\n  onEmptyCart\n}) => {\n  _s();\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: ''\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false); // État pour gérer l'état de soumission\n\n  // Gérer les changements dans les champs de saisie\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setDeliveryInfo({\n      ...deliveryInfo,\n      [name]: value\n    });\n  };\n\n  // Gérer la soumission de la commande\n  const handleOrderSubmit = async () => {\n    console.log('Envoi des données de commande au backend depuis ValidateOrder.js...');\n    console.log('Données de commande :', {\n      items,\n      deliveryInfo,\n      totalPrice\n    });\n\n    // Afficher une alerte avec les données envoyées au backend\n    alert(`Données envoyées au backend:\\n\\n${JSON.stringify({\n      items,\n      deliveryInfo,\n      totalPrice\n    }, null, 2)}`);\n    setMessage('Envoi de la commande...');\n    try {\n      const response = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          items,\n          deliveryInfo,\n          totalPrice\n        })\n      });\n      if (response.ok) {\n        const data = await response.json();\n        console.log('Réponse reçue du backend :', data);\n        setMessage('Commande validée avec succès !');\n      } else {\n        console.log('Erreur de serveur lors de la création de la commande');\n        setMessage('Erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      setMessage('Impossible de se connecter au serveur');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Valider la commande\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"name\",\n        placeholder: \"Nom\",\n        onChange: handleInputChange,\n        value: deliveryInfo.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"surname\",\n        placeholder: \"Pr\\xE9nom\",\n        onChange: handleInputChange,\n        value: deliveryInfo.surname\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"city\",\n        placeholder: \"Ville\",\n        onChange: handleInputChange,\n        value: deliveryInfo.city\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"neighborhood\",\n        placeholder: \"Quartier\",\n        onChange: handleInputChange,\n        value: deliveryInfo.neighborhood\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"phone\",\n        placeholder: \"T\\xE9l\\xE9phone\",\n        onChange: handleInputChange,\n        value: deliveryInfo.phone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOrderSubmit,\n      disabled: isSubmitting,\n      children: isSubmitting ? 'Envoi en cours...' : 'Valider la commande'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(ValidateOrder, \"pHn0LhFDLiiwfgim78r+9Yv12P0=\");\n_c = ValidateOrder;\nexport default ValidateOrder;\nvar _c;\n$RefreshReg$(_c, \"ValidateOrder\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ValidateOrder","items","totalPrice","onEmptyCart","_s","deliveryInfo","setDeliveryInfo","name","surname","city","neighborhood","phone","message","setMessage","isSubmitting","setIsSubmitting","handleInputChange","e","value","target","handleOrderSubmit","console","log","alert","JSON","stringify","response","fetch","method","headers","body","ok","data","json","error","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onChange","onClick","disabled","_c","$RefreshReg$"],"sources":["/home/fathane/mon-projet-menu/frontend/src/components/ValidateOrder.js"],"sourcesContent":["import React, { useState } from 'react';\n\nconst ValidateOrder = ({ items, totalPrice, onEmptyCart }) => {\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    name: '',\n    surname: '',\n    city: '',\n    neighborhood: '',\n    phone: '',\n  });\n  const [message, setMessage] = useState('');\n  const [isSubmitting, setIsSubmitting] = useState(false);   // État pour gérer l'état de soumission\n\n  // Gérer les changements dans les champs de saisie\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setDeliveryInfo({ ...deliveryInfo, [name]: value });\n  };\n\n  // Gérer la soumission de la commande\n  const handleOrderSubmit = async () => {\n    console.log('Envoi des données de commande au backend depuis ValidateOrder.js...');\n    console.log('Données de commande :', { items, deliveryInfo, totalPrice });\n  \n    // Afficher une alerte avec les données envoyées au backend\n    alert(`Données envoyées au backend:\\n\\n${JSON.stringify({ items, deliveryInfo, totalPrice }, null, 2)}`);\n  \n    setMessage('Envoi de la commande...');\n  \n    try {\n      const response = await fetch('http://localhost:5000/api/orders', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ items, deliveryInfo, totalPrice }),\n      });\n  \n      if (response.ok) {\n        const data = await response.json();\n        console.log('Réponse reçue du backend :', data);\n        setMessage('Commande validée avec succès !');\n      } else {\n        console.log('Erreur de serveur lors de la création de la commande');\n        setMessage('Erreur lors de la validation de la commande');\n      }\n    } catch (error) {\n      console.error('Erreur lors de la communication avec le serveur:', error);\n      setMessage('Impossible de se connecter au serveur');\n    }\n  };\n  \n  return (\n    <div>\n      <h2>Valider la commande</h2>\n      <div>\n        <input\n          name=\"name\"\n          placeholder=\"Nom\"\n          onChange={handleInputChange}\n          value={deliveryInfo.name}\n        />\n        <input\n          name=\"surname\"\n          placeholder=\"Prénom\"\n          onChange={handleInputChange}\n          value={deliveryInfo.surname}\n        />\n        <input\n          name=\"city\"\n          placeholder=\"Ville\"\n          onChange={handleInputChange}\n          value={deliveryInfo.city}\n        />\n        <input\n          name=\"neighborhood\"\n          placeholder=\"Quartier\"\n          onChange={handleInputChange}\n          value={deliveryInfo.neighborhood}\n        />\n        <input\n          name=\"phone\"\n          placeholder=\"Téléphone\"\n          onChange={handleInputChange}\n          value={deliveryInfo.phone}\n        />\n      </div>\n\n      <button onClick={handleOrderSubmit} disabled={isSubmitting}>\n        {isSubmitting ? 'Envoi en cours...' : 'Valider la commande'}\n      </button>\n\n      {message && <p>{message}</p>}\n    </div>\n  );\n};\n\nexport default ValidateOrder;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}